// bigint Test Program
//
// Tests:  times_10, uses ==
//
#include <iostream>
#include <cassert>
#include <climits>
#include "bigint.hpp"

//===========================================================================
int main () {
    {
        //------------------------------------------------------
        // Setup fixture
        bigint bi(3);

        // Test 
        bi = bi.times_10(0);

        // Verify
        assert(bi == 3); 
    }
    {
        // Setup fixture
        bigint bi(INT_MAX);

        // Test
        bi = bi.times_10(20);

        // Verify (INT_MAX with 20 trailing zeros)
        assert(bi == "214748364700000000000000000000");
    }
    {
        // Setup fixture
        bigint bi("987654321987654321");

        // Test
        bi = bi.times_10(10);

        // Verify
        assert(bi == "9876543219876543210000000000");
    }
    {
        // Setup fixture
        bigint bi("9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");

        // Test
        bi = bi.times_10(1);

        // Verify
        assert(bi == "9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990");
    }   
    {
        // Setup fixture
        bigint bi("9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");

        // Test
        bi = bi.times_10(12);

        // Verify
        assert(bi == "9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000000000000");
    }
    {
        // Setup fixture
        bigint bi("9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");

        // Test (should shift all but one of the 9's out of the arrray)
        bi = bi.times_10(255);

        // Verify
        assert(bi == "9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    }
    {
        // Setup fixture (arbitrary large number)
        bigint bi("1923598123409712394871209834712348912348123");

        // Test (bi * 10^400 should shift arbitrary number out of array)
        bi = bi.times_10(400);

        // Verify
        assert(bi == 0);
    }


    //Add test cases as needed.

    std::cout << "Done testing times_10" << std::endl;
}

